spring:
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  application:
    name: components-example-starters-simple
  profiles:
    active: local
  h2:
    console:
      # h2嵌入式数据库控制台，可以通过浏览器访问
      path: /h2Console
      enabled: true
  datasource:
    url: jdbc:h2:/Users/jphoebe/opt/code/IdeaProjects/github/skrstop-components-17/components-examples/components-example-starters-simple/src/main/resources/db/exampleStarters
    driver-class-name: org.h2.Driver
    username: sa
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 连接池的配置信息
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      # 配置DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: "/*"
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
      # 配置DruidStatViewServlet
      stat-view-servlet:
        url-pattern: "/druid/*"
        # IP白名单(没有配置或者为空，则允许所有访问)
        allow: 127.0.0.1, 10.30.8.118
        # IP黑名单 (存在共同时，deny优先于allow)
        deny: 192.168.1.73
        #  禁用HTML页面上的“Reset All”功能
        reset-enable: false
        # 登录名
        login-username: admin
        # 登录密码
        login-password: 123456
  data:
    redis:
      host: 127.0.0.1
      port: 6379
      password:
      database: 0
      timeout:
      lettuce:
        pool:
          max-active: 8
          max-wait: -1
          max-idle: 8
          min-idle: 0
    mongodb:
      uri: mongodb://root:123456@127.0.0.1:27017/example_starts_mongo?authSource=admin&minpoolsize=10&maxpoolsize=50


server:
  port: 8081
  tomcat:
    threads:
      min-spare: 10
      max: 200
    connection-timeout: 15000
    accept-count: 4096
    max-connections: 65000
    mbeanregistry:
      enabled: true
    relaxed-path-chars:
      - '{'
      - '}'
      - '['
      - ']'
      - '|'
      - '<'
      - '>'
      - '\'
      - '^'
      - '`'
      - '"'
    relaxed-query-chars:
      - '{'
      - '}'
      - '['
      - ']'
      - '|'
      - '<'
      - '>'
      - '\'
      - '^'
      - '`'
      - '"'

logging:
  config: classpath:logConfig/log4j2.xml


springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    url: /v3/api-docs
  packages-to-scan: com.skrstop.framework.components.example.starters.simple.controller
  paths-to-match: /**

skrstop:
  response:
    config:
      enable-feign-trans-result-type-response: true
  redis:
    redisson:
      enabled: true
      config-yaml-str: |
        singleServerConfig:
          address: redis://127.0.0.1:6379
          database: 0
        threads: 10
        nettyThreads: 10
        codec:
          class: "org.redisson.codec.JsonJacksonCodec"
      dynamic:
        enabled: true
        primary: r_db0
        data-sources:
          r_db0:
            config-yaml-str: |
              singleServerConfig:
                address: redis://127.0.0.1:6379
                database: 1
              threads: 10
              nettyThreads: 10
              codec:
                class: "org.redisson.codec.JsonJacksonCodec"
          r_db1:
            config-yaml-str: |
              singleServerConfig:
                address: redis://127.0.0.1:6379
                database: 2
              threads: 10
              nettyThreads: 10
              codec:
                class: "org.redisson.codec.JsonJacksonCodec"
          r_db2:
            config-yaml-str: |
              singleServerConfig:
                address: redis://127.0.0.1:6379
                database: 3
              threads: 10
              nettyThreads: 10
              codec:
                class: "org.redisson.codec.JsonJacksonCodec"
    dynamic:
      enabled: true
      primary: db0
      data-sources:
        db0:
          host: 127.0.0.1
          port: 6379
          password:
          database: 0
          timeout:
          lettuce:
            pool:
              max-active: 8
              max-wait: -1
              max-idle: 8
              min-idle: 0
        db1:
          host: 127.0.0.1
          port: 6379
          password:
          database: 1
          timeout:
          lettuce:
            pool:
              max-active: 8
              max-wait: -1
              max-idle: 8
              min-idle: 0
        db2:
          host: 127.0.0.1
          port: 6379
          password:
          database: 2
          timeout:
          lettuce:
            pool:
              max-active: 8
              max-wait: -1
              max-idle: 8
              min-idle: 0
  database:
    config:
      sql-healthy-check: false
      mapper-class-location: com.skrstop.framework.components.example.starters.simple.mapper.mysql
      mapper-xml-location: classpath*:mapper/*.xml
    dynamic:
      enabled: true
      primary: db0
      data-sources:
        db0:
          url: jdbc:h2:/Users/jphoebe/opt/code/IdeaProjects/github/skrstop-components-17/components-examples/components-example-starters-simple/src/main/resources/db/exampleStarters
          driver-class-name: org.h2.Driver
          username: sa
          password: 123456
          type: com.alibaba.druid.pool.DruidDataSource
          druid:
            # 连接池的配置信息
            # 初始化大小，最小，最大
            initial-size: 5
            min-idle: 5
            max-active: 20
            # 配置获取连接等待超时的时间
            max-wait: 60000
            # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
            time-between-eviction-runs-millis: 60000
            # 配置一个连接在池中最小生存的时间，单位是毫秒
            min-evictable-idle-time-millis: 300000
            validation-query: SELECT 1
            test-while-idle: true
            test-on-borrow: false
            test-on-return: false
            # 打开PSCache，并且指定每个连接上PSCache的大小
            pool-prepared-statements: true
            max-pool-prepared-statement-per-connection-size: 20
            # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
            filters: stat,wall,slf4j
            # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
            connection-properties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
        db1:
          url: jdbc:h2:/Users/jphoebe/opt/code/IdeaProjects/github/skrstop-components-17/components-examples/components-example-starters-simple/src/main/resources/db/exampleStarters2
          driver-class-name: org.h2.Driver
          username: sa
          password: 123456
          type: com.alibaba.druid.pool.DruidDataSource
          druid:
            # 连接池的配置信息
            # 初始化大小，最小，最大
            initial-size: 5
            min-idle: 5
            max-active: 20
            # 配置获取连接等待超时的时间
            max-wait: 60000
            # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
            time-between-eviction-runs-millis: 60000
            # 配置一个连接在池中最小生存的时间，单位是毫秒
            min-evictable-idle-time-millis: 300000
            validation-query: SELECT 1
            test-while-idle: true
            test-on-borrow: false
            test-on-return: false
            # 打开PSCache，并且指定每个连接上PSCache的大小
            pool-prepared-statements: true
            max-pool-prepared-statement-per-connection-size: 20
            # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
            filters: stat,wall,slf4j
            # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
            connection-properties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
  annotation:
    config:
      access-control:
        release-alias:
          - exampleAnnotationAccessControl1
  mongodb:
    config:
      map-package: com.skrstop.framework.components.example.starters.simple.entity.mongo
      ## 默认
      #      collection-naming: identity
      #      property-naming: identity
      ## 驼峰
      #      collection-naming: camelCase
      #      property-naming: camelCase
      ## 下划线
      collection-naming: snakeCase
      property-naming: snakeCase
      ## 中划线
      #      collection-naming: kebabCase
      #      property-naming: kebabCase
    dynamic:
      enabled: false
      data-sources:
        master:
          uri: mongodb://root:123456@127.0.0.1:27017/example_starts_mongo?authSource=admin&minpoolsize=10&maxpoolsize=50
        slave:
          uri: mongodb://root:123456@127.0.0.1:27017/example_starts_mongo1?authSource=admin&minpoolsize=10&maxpoolsize=50